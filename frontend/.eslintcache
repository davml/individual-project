[{"C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\index.js":"1","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\App.js":"2","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\redux\\reducers\\index.js":"3","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\layout.js":"4","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\constants\\actionTypes.js":"5","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\header\\navigationBar.js":"6","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\pages\\home\\home.js":"7","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\modals\\account\\accountModal.js":"8","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\redux\\reducers\\auth.js":"9","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\redux\\actions\\auth.js":"10","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\redux\\api\\index.js":"11","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\modals\\sidebar\\sidebar.js":"12","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\pages\\account\\Account.js":"13","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\pages\\account\\account-components\\Profile\\Profile.js":"14","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\redux\\reducers\\user.js":"15","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\redux\\reducers\\businessAuth.js":"16","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\pages\\business\\business.js":"17","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\redux\\actions\\businessAuth.js":"18","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\pages\\search\\search.js":"19","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\redux\\actions\\jobs.js":"20","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\redux\\reducers\\jobs.js":"21","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\pages\\about\\about.js":"22","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\pages\\profile\\Profile.js":"23","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\pages\\mybusiness\\mybusiness.js":"24","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\pages\\oytBusiness\\oytBusiness.js":"25","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\modals\\businessAccount\\businessAccountModal.js":"26","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\pages\\mybusiness\\businessComponents\\businessProfile\\businessProfile.js":"27","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\pages\\mybusiness\\businessComponents\\businessJobs\\businessJobs.js":"28","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\modals\\jobs\\newJob\\newJob.js":"29","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\modals\\jobs\\existingJob\\job.js":"30","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\redux\\reducers\\businessUser.js":"31","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\pages\\search\\jobsList\\jobsList.js":"32","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\pages\\search\\jobsList\\jobItem\\jobItem.js":"33","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\pages\\account\\account-components\\Jobs\\myJobs.js":"34","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\modals\\jobs\\jobSettings\\jobSettings.js":"35","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\modals\\verification\\verify.js":"36","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\modals\\jobs\\editJob\\editJob.js":"37","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\modals\\business\\business.js":"38","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\footer\\footer.js":"39"},{"size":471,"mtime":1613351735424,"results":"40","hashOfConfig":"41"},{"size":262,"mtime":1616553628196,"results":"42","hashOfConfig":"41"},{"size":297,"mtime":1615654581551,"results":"43","hashOfConfig":"41"},{"size":2360,"mtime":1616553892626,"results":"44","hashOfConfig":"41"},{"size":1594,"mtime":1616430898822,"results":"45","hashOfConfig":"41"},{"size":11171,"mtime":1616553945496,"results":"46","hashOfConfig":"41"},{"size":4772,"mtime":1616552315752,"results":"47","hashOfConfig":"41"},{"size":5946,"mtime":1616553863229,"results":"48","hashOfConfig":"41"},{"size":521,"mtime":1615897217223,"results":"49","hashOfConfig":"41"},{"size":2928,"mtime":1616430900779,"results":"50","hashOfConfig":"41"},{"size":2223,"mtime":1616430878787,"results":"51","hashOfConfig":"41"},{"size":3245,"mtime":1614041099987,"results":"52","hashOfConfig":"41"},{"size":2434,"mtime":1616522641707,"results":"53","hashOfConfig":"41"},{"size":5072,"mtime":1616539837475,"results":"54","hashOfConfig":"41"},{"size":838,"mtime":1616430921714,"results":"55","hashOfConfig":"41"},{"size":553,"mtime":1615653967050,"results":"56","hashOfConfig":"41"},{"size":1253,"mtime":1614462155164,"results":"57","hashOfConfig":"41"},{"size":2159,"mtime":1615653955407,"results":"58","hashOfConfig":"41"},{"size":2696,"mtime":1616551005978,"results":"59","hashOfConfig":"41"},{"size":1914,"mtime":1616553788778,"results":"60","hashOfConfig":"41"},{"size":804,"mtime":1615657999349,"results":"61","hashOfConfig":"41"},{"size":162,"mtime":1615243379793,"results":"62","hashOfConfig":"41"},{"size":3565,"mtime":1614798085068,"results":"63","hashOfConfig":"41"},{"size":2741,"mtime":1616267384324,"results":"64","hashOfConfig":"41"},{"size":1391,"mtime":1615232382399,"results":"65","hashOfConfig":"41"},{"size":4466,"mtime":1615654760402,"results":"66","hashOfConfig":"41"},{"size":2966,"mtime":1616267295230,"results":"67","hashOfConfig":"41"},{"size":5711,"mtime":1616544266269,"results":"68","hashOfConfig":"41"},{"size":6738,"mtime":1616434113506,"results":"69","hashOfConfig":"41"},{"size":5255,"mtime":1616554049976,"results":"70","hashOfConfig":"41"},{"size":727,"mtime":1615656014626,"results":"71","hashOfConfig":"41"},{"size":550,"mtime":1616550513860,"results":"72","hashOfConfig":"41"},{"size":1010,"mtime":1615731692059,"results":"73","hashOfConfig":"41"},{"size":4387,"mtime":1616551557058,"results":"74","hashOfConfig":"41"},{"size":3798,"mtime":1616532435620,"results":"75","hashOfConfig":"41"},{"size":3011,"mtime":1616541094603,"results":"76","hashOfConfig":"41"},{"size":2273,"mtime":1616544407384,"results":"77","hashOfConfig":"41"},{"size":1255,"mtime":1616547535580,"results":"78","hashOfConfig":"41"},{"size":208,"mtime":1616553216750,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"ljexd1",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"82"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"82"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"82"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"82"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\index.js",[],["185","186"],"C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\App.js",[],"C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\redux\\reducers\\index.js",[],"C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\layout.js",["187"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\n\r\nimport Home from './body/pages/home/home';\r\nimport Account from './body/pages/account/Account';\r\nimport Search from './body/pages/search/search';\r\nimport About from './body/pages/about/about';\r\nimport MyBusiness from './body/pages/mybusiness/mybusiness';\r\nimport oytBusiness from './body/pages/oytBusiness/oytBusiness';\r\n\r\nimport { getAccount } from '../../redux/actions/auth';\r\nimport { getBusinessAccount } from '../../redux/actions/businessAuth';\r\n\r\n\r\nimport classes from './layout.css';\r\n\r\nimport NavigationBar from './header/navigationBar';\r\n\r\nconst Layout = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n\r\n    useEffect(() => {\r\n        if(user){\r\n            if(user?.result?.accountType===\"Business\"){\r\n                dispatch(getBusinessAccount(user?.result?._id));\r\n            }\r\n            else {\r\n                dispatch(getAccount(user?.result?._id));\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Router>\r\n            <div className={classes.layout}>\r\n                <div className={classes.navbar}>\r\n                    <NavigationBar user={user} setUser={setUser} />\r\n                </div>\r\n\r\n                <div className={classes.body}>\r\n                    <Switch>\r\n                        <Route path='/' exact component={Home} />\r\n                    </Switch>\r\n                    <Switch>\r\n                        <Route path='/account' exact component={Account} />\r\n                    </Switch>\r\n                    <Switch>\r\n                        <Route path='/business' exact component={oytBusiness} />\r\n                    </Switch>\r\n                    <Switch>\r\n                        <Route path='/search' exact component={Search} />\r\n                    </Switch>\r\n                    <Switch>\r\n                        <Route path='/about' exact component={About} />\r\n                    </Switch>\r\n                    <Switch>\r\n                        <Route path='/mybusiness' exact component={MyBusiness} />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default Layout;","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\constants\\actionTypes.js",[],"C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\header\\navigationBar.js",["188","189","190","191"],"import React, { useState, useEffect } from 'react';\r\nimport {Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport logo from '../../../assets/images/site-logo.png'\r\nimport classes from './navigationBar.css';\r\n\r\nimport AccountModal from '../body/modals/account/accountModal';\r\nimport BusinessAccountModal from '../body/modals/businessAccount/businessAccountModal';\r\nimport Sidebar from '../body/modals/sidebar/sidebar';\r\nimport { searchJobs } from '../../../redux/actions/jobs';\r\n\r\nconst NavigationBar = (props) => {\r\n\r\n    const [search, setSearch] = useState(null);\r\n\r\n    useEffect(() => {\r\n        dispatch(searchJobs({\"query\":search}))\r\n    }, [search])\r\n\r\n    const jobs = useSelector((state) => state.job);\r\n    let jobsList = [];\r\n    if(jobs){\r\n        jobsList = jobs.map((job) => <Link className={classes.dropdownLink}>{job?.title}</Link>);\r\n    }\r\n\r\n    const [option, setOption] = useState(true);\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const toggleModal = () => setModal(!modal);\r\n\r\n    const [userModal, setUserModal] = useState(false);\r\n    const toggleUserModal = () => setUserModal(!userModal);\r\n\r\n    const [businessModal, setBusinessModal] = useState(false);\r\n    const toggleBusinessModal = () => setBusinessModal(!businessModal);\r\n\r\n    const userData = localStorage.getItem(\"profile\");\r\n    const user = JSON.parse(userData);\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n\r\n    let displayContent;\r\n\r\n    const handleSearch = (e) => {\r\n        e.preventDefault();\r\n\r\n        console.log(search);\r\n    }\r\n    \r\n    const logout = () => {\r\n        dispatch({ type: 'LOGOUT_USER' });\r\n\r\n        history.push('/');\r\n    };\r\n\r\n    const logoutBusiness = () => {\r\n        dispatch({ type: 'LOGOUT_BUSINESS' });\r\n\r\n        history.push('/');\r\n    };\r\n\r\n    useEffect(() => {\r\n        const token = props.user?.token;\r\n\r\n        props.setUser(JSON.parse(localStorage.getItem('profile')));\r\n    }, [location])\r\n\r\n    if(user) {\r\n        displayContent=(<div></div>)\r\n        if(user?.result?.accountType === \"Freelance\"){\r\n            displayContent = (\r\n                <div className={classes.navbar}>\r\n\r\n                    <div className={classes.logo}>\r\n                        <Link to='/' className={classes.desktop}>\r\n                            <img src={logo} alt=\"On Your Terms\" className={classes.img}/>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    \r\n                    <div className={classes.linksDiv}>\r\n                        <ul className={classes.linksList}>\r\n                            <li className={classes.link}>\r\n                                <Link to='/' className={classes.navlink}>\r\n                                    <i class=\"fas fa-home\"></i> Home\r\n                                </Link>\r\n                            </li>\r\n\r\n                            <li className={classes.navitem}>\r\n                                <div className={classes.dropdown}>\r\n                                    <Link to='/account' className={classes.navlink}>\r\n                                        Account <i class=\"fa fa-caret-down\"></i>\r\n                                    </Link>\r\n\r\n                                    <div className={classes.dropdownContent}>\r\n                                        <Link to = '/account' className={classes.dropdownLink}>My Account</Link>\r\n                                        <Link to = '/' className={classes.dropdownLink} onClick={logout}>Logout</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div className={classes.searchWrapper}>\r\n                        <form onSubmit={handleSearch}className={classes.searchbox}>\r\n                            <input type=\"text\" placeholder=\"Search...\" onChange={(e) => {setSearch(e.target.value)}}/>\r\n                            <Link to={{pathname:'/search', searchProps:{search:jobs}}}>\r\n                                <button type=\"submit\"><i class=\"fas fa-search\"></i></button>\r\n                            </Link>\r\n                        </form>\r\n                    </div>\r\n\r\n                    <div className={classes.inboxWrapper}>\r\n                        <Link to='/inbox' className={classes.navlink}>\r\n                            <i class=\"fas fa-envelope\"></i>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className={classes.mobileWrapper}>\r\n                        <div className={classes.mobileSidebar}>\r\n                            <i onClick={toggleModal} class=\"fas fa-bars\"></i>\r\n                            <Sidebar modal={modal} toggle={toggleModal}/>\r\n                        </div>\r\n                        <div className={classes.mobileLogo}>\r\n                            {!modal ? <p className={classes.mobileLogoContent}><i class=\"far fa-clock\"></i>n Your Terms</p> : null}\r\n                        </div>\r\n                    </div>\r\n\r\n                    \r\n                </div>\r\n            )\r\n        }\r\n        else if(user?.result?.accountType === \"Business\"){\r\n            displayContent = (\r\n                <div className={classes.navbar}>\r\n\r\n                    <div className={classes.logo}>\r\n                        <Link to='/' className={classes.desktop}>\r\n                            <img src={logo} alt=\"On Your Terms\" className={classes.img}/>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    \r\n                    <div className={classes.linksDiv}>\r\n                        <ul className={classes.linksList}>\r\n                            <li className={classes.link}>\r\n                                <Link to='/' className={classes.navlink}>\r\n                                    <i class=\"fas fa-home\"></i> Home\r\n                                </Link>\r\n                            </li>\r\n\r\n                            <li className={classes.navitem}>\r\n                                <div className={classes.dropdown}>\r\n                                    <Link to='/mybusiness' className={classes.navlink}>\r\n                                        Business <i class=\"fa fa-caret-down\"></i>\r\n                                    </Link>\r\n\r\n                                    <div className={classes.dropdownContent}>\r\n                                        <Link to = '/mybusiness' className={classes.dropdownLink}>My Business</Link>\r\n                                        <Link to = '/' className={classes.dropdownLink} onClick={logoutBusiness}>Logout</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div className={classes.mobileWrapper}>\r\n                        <div className={classes.mobileSidebar}>\r\n                            <i onClick={toggleModal} class=\"fas fa-bars\"></i>\r\n                            <Sidebar modal={modal} toggle={toggleModal}/>\r\n                        </div>\r\n                        <div className={classes.mobileLogo}>\r\n                            {!modal ? <p className={classes.mobileLogoContent}><i class=\"far fa-clock\"></i>n Your Terms</p> : null}\r\n                        </div>\r\n                    </div>\r\n\r\n                    \r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    else {\r\n        displayContent = (\r\n            <div className={classes.navbar}>\r\n\r\n                <div className={classes.logo}>\r\n                    <Link to='/' className={classes.desktop}>\r\n                        <img src={logo} alt=\"On Your Terms\" className={classes.img}/>\r\n                    </Link>\r\n                </div>\r\n\r\n                \r\n                <div className={classes.linksDiv}>\r\n                    <ul className={classes.linksList}>\r\n                        <li className={classes.link}>\r\n                            <Link to='/' className={classes.navlink}>\r\n                                <i class=\"fas fa-home\"></i> Home\r\n                            </Link>\r\n                        </li>\r\n\r\n                        <li className={classes.navitem}>\r\n                            <Link to='/business' className={classes.navlink}>\r\n                                OYT Business\r\n                            </Link>\r\n                        </li>\r\n\r\n                        <li className={classes.navitem}>\r\n                            <div className={classes.dropdown}>\r\n                                <Link className={classes.navlink}>\r\n                                    <button className={classes.joinBtn}>Sign Up <i class=\"fa fa-caret-down\"></i></button>\r\n                                </Link>\r\n\r\n                                <div className={classes.dropdownContent}>\r\n                                    <Link onClick={()=>{setOption(true); toggleUserModal();}} className={classes.dropdownLink}>Sign Up</Link>\r\n                                    <Link onClick={()=>{setOption(false); toggleUserModal();}} className={classes.dropdownLink}>Login</Link>\r\n                                    <Link onClick={()=>{setOption(true); toggleBusinessModal();}} className={classes.dropdownLink}>Business Signup</Link>\r\n                                    <Link onClick={()=>{setOption(false); toggleBusinessModal();}} className={classes.dropdownLink}>Business Login</Link>\r\n                                </div>\r\n                                <AccountModal modal={userModal} toggle={toggleUserModal} setModal={setUserModal}/>\r\n                                <BusinessAccountModal modal={businessModal} toggle={toggleBusinessModal} setModal={setBusinessModal} option={option}/>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className={classes.searchWrapper}>\r\n                    <form onSubmit={handleSearch}className={classes.searchbox}>\r\n                        <input type=\"text\" placeholder=\"Search...\" onChange={(e) => {setSearch(e.target.value)}}/>\r\n                        <Link to={{pathname:'/search', searchProps:{search:jobs}}}>\r\n                            <button type=\"submit\"><i class=\"fas fa-search\"></i></button>\r\n                        </Link>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className={classes.mobileWrapper}>\r\n                    <div className={classes.mobileSidebar}>\r\n                        <i onClick={toggleModal} class=\"fas fa-bars\"></i>\r\n                        <Sidebar modal={modal} toggle={toggleModal}/>\r\n                    </div>\r\n                    <div className={classes.mobileLogo}>\r\n                        {!modal ? <p className={classes.mobileLogoContent}><i class=\"far fa-clock\"></i>n Your Terms</p> : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return displayContent\r\n}\r\n\r\nexport default NavigationBar;","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\pages\\home\\home.js",["192","193"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport background from '../../../../../assets/images/computer-background.jpg';\r\nimport AccountModal from '../../modals/account/accountModal';\r\n\r\nimport classes from './home.css';\r\n\r\n\r\n\r\nconst Home = () => {\r\n    const [modal, setModal] = useState(false);\r\n    const toggleModal = () => setModal(!modal);\r\n    return (\r\n        <div className={classes.homeWrapper}>\r\n            <div className={classes.imageWrapper}>\r\n                <img src={background} className={classes.backgroundImage} />\r\n                <div className={classes['img-txt']}>On Your Time <br/>On Your Rate <br/>On Your Terms</div>\r\n                <div className={classes[\"img-signup\"]}>\r\n                    {!JSON.parse(localStorage.getItem('profile')) ? (<button type=\"submit\" className={classes['signup-button']} onClick={toggleModal}>Sign Up Today</button>) : null}\r\n                    <AccountModal modal={modal} toggle={toggleModal} setModal={setModal} option={true}/>\r\n                </div>\r\n            </div>\r\n            <div className={classes[\"content-wrapper\"]}>\r\n                \r\n                <div className={classes[\"info-1\"]}>\r\n                    <div className={classes[\"job-search\"]}>\r\n                        <h1 className={classes[\"job-heading\"]}>Freelancers</h1>\r\n                        <p className={classes[\"text-info\"]}><i class=\"fas fa-clock\"></i> Search for jobs which work on your terms</p>\r\n                        <p className={classes[\"text-info\"]}><i class=\"fas fa-robot\"></i> Allow our system to do the job search for you</p>\r\n                        <p className={classes[\"text-info\"]}><i class=\"fas fa-smile\"></i> Reep the benefits of the easiest job search ever</p>\r\n                    </div>\r\n                    <div className={classes[\"job-search\"]}>\r\n                        <h1 className={classes[\"job-heading\"]}>Employers</h1>\r\n                        <p className={classes[\"text-info\"]}><i class=\"fas fa-share\"></i> Share job vacancies on our site</p>\r\n                        <p className={classes[\"text-info\"]}><i class=\"fas fa-robot\"></i> Allow our system to send your roles to suited freelancers</p>\r\n                        <p className={classes[\"text-info\"]}><i class=\"fas fa-smile\"></i> Reep the benefits of the easiest job recruitment ever</p>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className={classes[\"info-2\"]}>\r\n                    <div className={classes[\"job-types\"]}>\r\n                        <i class=\"fas fa-laptop-code\"></i>\r\n                        <p className={classes[\"text-info\"]}>Web Development</p>\r\n                    </div>\r\n                    <div className={classes[\"job-types\"]}>\r\n                        <i class=\"fas fa-palette\"></i>\r\n                        <p className={classes[\"text-info\"]}>Graphic Design</p>\r\n                    </div>\r\n                    <div className={classes[\"job-types\"]}>\r\n                        <i class=\"fas fa-camera\"></i>\r\n                        <p className={classes[\"text-info\"]}>Photography</p>\r\n                    </div>\r\n                    <div className={classes[\"job-types\"]}>\r\n                        <i class=\"fas fa-language\"></i>\r\n                        <p className={classes[\"text-info\"]}>Translator</p>\r\n                    </div>\r\n                    <div className={classes[\"job-types\"]}>\r\n                        <i class=\"fas fa-mobile\"></i>\r\n                        <p className={classes[\"text-info\"]}>App Development</p>\r\n                    </div>\r\n                    <div className={classes[\"job-types\"]}>\r\n                        <i class=\"fas fa-pen\"></i>\r\n                        <p className={classes[\"text-info\"]}>Copywriter</p>\r\n                    </div>\r\n                    <div className={classes[\"job-types\"]}>\r\n                        <i class=\"fas fa-database\"></i>\r\n                        <p className={classes[\"text-info\"]}>Data Entry</p>\r\n                    </div>\r\n                    <div className={classes[\"job-types\"]}>\r\n                        <i class=\"fas fa-graduation-cap\"></i>\r\n                        <p className={classes[\"text-info\"]}>Tutoring</p>\r\n                    </div>\r\n                    <div className={classes[\"job-types\"]}>\r\n                        <i class=\"fab fa-hire-a-helper\"></i>\r\n                        <p className={classes[\"text-info\"]}>Personal Assistant</p>\r\n                    </div>\r\n                    <div className={classes[\"job-types\"]}>\r\n                        <i class=\"fas fa-paint-brush\"></i>\r\n                        <p className={classes[\"text-info\"]}>Painter</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>   \r\n    )\r\n}\r\n\r\nexport default Home;","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\modals\\account\\accountModal.js",["194","195","196"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { useDispatch } from 'react-redux'\r\nimport classes from './accountModal.css';\r\nimport ReactDom from 'react-dom';\r\nimport img from '../../../../../assets/images/modalbackground.jpg';\r\nimport oytimg from '../../../../../assets/images/logo.png';\r\n\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { signin, signup } from '../../../../../redux/actions/auth'\r\n\r\nconst initialState = { email: '', password: '', confirmPassword: '', forename: '', surname: '' }\r\n\r\nconst AccountModal = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const [formData, setFormData] = useState(initialState);\r\n\r\n    const [click, setClick] = useState(props?.option);\r\n\r\n    useEffect(() => {\r\n        setClick(props?.option);\r\n    }, [props?.option])\r\n\r\n    const googleSuccess = async (res) => {\r\n        const result = res?.profileObj;\r\n        const token = res?.tokenId;\r\n\r\n        try {\r\n            dispatch({ type: 'AUTH', data: { result, token } })\r\n\r\n            setClick(!click);\r\n            history.push('/')\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const googleFailure = (error) => {\r\n        console.log(error);\r\n        console.log(\"Google sign in was unsuccessful. Try again later.\")\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(click) {\r\n            dispatch(signup(formData, history))\r\n        } else {\r\n            dispatch(signin(formData, history))\r\n        }\r\n\r\n        (props.setModal(false))\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value })\r\n    }\r\n\r\n\r\n    let selection;\r\n    if(click){\r\n        selection=(\r\n            <>\r\n            <form className={classes[\"form-contents\"]} onSubmit={handleSubmit}>\r\n                <div className={classes[\"form-names\"]}>\r\n                    <input type=\"text\" name=\"forename\" placeholder=\"Forename\" className={classes[\"form-element-names\"]} required onChange={handleChange} />\r\n                    <input type=\"text\" name=\"surname\" placeholder=\"Surname\" className={classes[\"form-element-names\"]} requried onChange={handleChange} />\r\n                </div>\r\n                <input type=\"email\" name=\"email\" placeholder=\"Email Address\" className={classes[\"form-element\"]} required onChange={handleChange}/>\r\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" className={classes[\"form-element\"]} required onChange={handleChange}/>\r\n                <input type=\"password\" name=\"confirmPassword\" placeholder=\"Re-enter Password\" className={classes[\"form-element\"]} required onChange={handleChange}/>\r\n                <button type=\"submit\" className={classes[\"form-submit\"]}>Register</button>\r\n                <div className={classes[\"oyt-div\"]}>\r\n                    <img src={oytimg} className={classes[\"oyt-img\"]}/>\r\n                </div>\r\n            </form>\r\n            </>\r\n        )\r\n    }\r\n    else {\r\n        selection = (\r\n            <>\r\n            <form className={classes[\"form-contents\"]} onSubmit={handleSubmit}>\r\n                <input type=\"email\" name=\"email\" placeholder=\"Email Address\" className={classes[\"form-element\"]} required onChange={handleChange}/>\r\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" className={classes[\"form-element\"]} required onChange={handleChange}/>\r\n                <button type=\"submit\" className={classes[\"form-submit\"]}>Login</button>\r\n\r\n                <GoogleLogin \r\n                    clientId=\"637249509494-fa84dhgkddl1s53i2mohh90hbnpvrpd2.apps.googleusercontent.com\"\r\n                    render={(renderProps) => (\r\n                        <button \r\n                        className={classes[\"googleButton\"]} \r\n                        fullWidth onClick={renderProps.onClick} \r\n                        disabled={renderProps.disabled} \r\n                        startIcon={<i class=\"fab fa-google\"></i>} \r\n                        varient=\"contained\"\r\n                        ><i class=\"fab fa-google\"></i> Google Sign In</button>\r\n                    )}\r\n                    onSuccess={googleSuccess}\r\n                    onFailure={googleFailure}\r\n                    cookiePolicy=\"single_host_origin\"\r\n                />\r\n\r\n                <div className={classes[\"oyt-div\"]}>\r\n                    <img src={oytimg} className={classes[\"oyt-img\"]}/>\r\n                </div>\r\n            </form>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    if(props.modal) {\r\n        return ReactDom.createPortal(\r\n            <>\r\n                <div className={classes[\"modal-background\"]} onClick={props.toggle} />\r\n\r\n                \r\n                <div className={classes[\"modal\"]}>\r\n                    <div className={classes[\"modal-content\"]}>\r\n\r\n                        <div className={classes[\"account\"]}>\r\n                            <div className={classes[\"help-selection\"]}>\r\n                                <button className={click ? classes[\"selected-btn\"] : classes[\"btn\"]} onClick={()=>setClick(true)}>Register</button>\r\n                                <button className={click ? classes[\"btn\"] : classes[\"selected-btn\"]} onClick={()=>setClick(false)}>Login</button>\r\n                            </div>\r\n\r\n                            <div className={classes[\"account-form\"]}>\r\n                                {selection}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={classes[\"img-container\"]}>\r\n                            <img src={img} className={classes[\"img\"]}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>,\r\n            document.getElementById('portal')\r\n        );\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default AccountModal;","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\redux\\reducers\\auth.js",[],"C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\redux\\actions\\auth.js",[],"C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\redux\\api\\index.js",[],"C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\modals\\sidebar\\sidebar.js",["197"],"import React, { useState } from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport classes from './sidebar.css';\r\n\r\nconst Sidebar = (props) => {\r\n    if(props.modal) {\r\n        return ReactDom.createPortal(\r\n            <>\r\n                <div className={classes[\"modal-background\"]} onClick={props.toggle} />\r\n\r\n                <div className={classes[\"modal\"]}>\r\n                    <div className={classes[\"modal-heading\"]}>\r\n                        <p className={classes.mobileLogoContent}><i class=\"far fa-clock\"></i>n Your Terms</p>\r\n                        <div className={classes[\"modal-close\"]}>\r\n                            <i onClick={props.toggle}class=\"fas fa-times\"></i>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes[\"modal-body\"]}>\r\n                        <div className={classes[\"body-search\"]}>\r\n                            <div className={classes.searchbox}>\r\n                                <input type=\"text\" placeholder=\"Search...\"/>\r\n                                <button type=\"submit\"><i class=\"fas fa-search\"></i></button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={classes[\"links-div\"]}>\r\n                            <ul className={classes[\"links-ul\"]}>\r\n                                <li className={classes[\"links-li\"]}>\r\n                                    <Link to='/' className={classes[\"links-link\"]}>\r\n                                        <i class=\"fas fa-home\"></i> Home\r\n                                    </Link>\r\n                                </li>\r\n                                <li className={classes[\"links-li\"]}>\r\n                                    <Link to='/' className={classes[\"links-link\"]}>\r\n                                        <i class=\"fas fa-question\"></i> About\r\n                                    </Link>\r\n                                </li>\r\n                                <li className={classes[\"links-li\"]}>\r\n                                    <Link to='/' className={classes[\"links-link\"]}>\r\n                                        <i class=\"fas fa-briefcase\"></i> OYT Business\r\n                                    </Link>\r\n                                </li>\r\n                                <li className={classes[\"links-li\"]}>\r\n                                    <Link to='/signin' className={classes[\"links-link\"]}>\r\n                                        <i class=\"fas fa-sign-in-alt\"></i> Sign In\r\n                                    </Link>\r\n                                </li>\r\n                                <li className={classes[\"links-li\"]}>\r\n                                    <Link to='/signin' className={classes[\"links-link\"]}>\r\n                                        <i class=\"fas fa-user-plus\"></i> Sign Up\r\n                                    </Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>,\r\n            document.getElementById('portal')\r\n        );\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default Sidebar;","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\pages\\account\\Account.js",["198","199","200","201"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector , useDispatch } from 'react-redux';\r\n\r\nimport classes from './account.css'\r\n\r\nimport Profile from './account-components/Profile/Profile';\r\nimport MyJobs from './account-components/Jobs/myJobs';\r\nimport { getAccount, getAccounts } from '../../../../../redux/actions/auth';\r\n\r\nconst Account = () => {\r\n    const dispatch = useDispatch();\r\n    const [currentUser, setCurrentUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n\r\n    useEffect(() => {\r\n        setCurrentUser(JSON.parse(localStorage.getItem('profile')));\r\n        dispatch(getAccount(currentUser?.result?._id));\r\n    }, [])\r\n\r\n    const [currentComponent, setCurrentComponent] = useState(<Profile />)\r\n    useEffect(() => {\r\n        dispatch(getAccount(currentUser?.result?._id));\r\n    }, [currentComponent])\r\n\r\n  \r\n    return(\r\n        <div className={classes[\"account-wrapper\"]}>\r\n\r\n            <div className={classes[\"account-dashboard\"]}>\r\n\r\n                <div className={classes[\"account-navbar\"]}>\r\n\r\n                    <div className={classes[\"navbar-links\"]}>\r\n                        <ul className={classes[\"links-ul\"]}>\r\n\r\n                            <li className={classes[\"links-li\"]}>\r\n                                <p className={classes[\"links-link\"]} onClick={()=>setCurrentComponent(<Profile />)}><i class=\"fas fa-user\"></i> My Profile</p>\r\n                            </li>\r\n\r\n                            <li className={classes[\"links-li\"]}>\r\n                                <p className={classes[\"links-link\"]} onClick={()=>setCurrentComponent(<MyJobs />)}><i class=\"fas fa-calendar-alt\"></i> My Jobs</p>\r\n                            </li>\r\n\r\n                            <li className={classes[\"links-li\"]}>\r\n                                <p className={classes[\"links-link\"]}><i class=\"fas fa-envelope\"></i> Inbox</p>\r\n                            </li>\r\n\r\n                            <li className={classes[\"links-li\"]}>\r\n                                <p className={classes[\"links-link\"]}><i class=\"fas fa-cog\"></i> Settings</p>\r\n                            </li>\r\n\r\n                        </ul>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className={classes[\"dashboard-display\"]}>\r\n                    {currentComponent}\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Account;","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\pages\\account\\account-components\\Profile\\Profile.js",["202","203","204"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getAccount, updateAccount } from '../../../../../../../redux/actions/auth';\r\n\r\nimport FileBase from 'react-file-base64';\r\n\r\nimport classes from './Profile.css';\r\n\r\n\r\nconst Profile = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const [userData, setUserData] = useState(null)\r\n    const [currentUser, setCurrentUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n    \r\n    \r\n    useEffect(() => {\r\n        setCurrentUser(JSON.parse(localStorage.getItem('profile')));\r\n        dispatch(getAccount(currentUser?.result?._id));\r\n    }, [])\r\n\r\n    const [user, setUser] = useState(useSelector(state => state.user));\r\n    useEffect(() => {\r\n        if (user) setUserData(user);\r\n    }, [user]);\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateAccount(userData._id, userData));\r\n        dispatch(getAccount(userData?._id));\r\n    }\r\n\r\n    return (\r\n        <div className={classes[\"profile-wrapper\"]}>\r\n            <div className={classes[\"user-profile\"]}>\r\n                <div className={classes[\"user-profile-details\"]}>\r\n                    <div className={classes[\"user-img\"]}>\r\n                        <img src={userData?.selectedFile} className={classes[\"profile-img\"]}/>\r\n                        <FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setUserData({ ...userData, selectedFile: base64 })} />\r\n                    </div>\r\n\r\n                    <div className={classes[\"user-basic-details\"]}>\r\n                        <div className={classes[\"user-basic-details-username\"]}>\r\n                            <p className={classes[\"user-name\"]}>\r\n                                {userData?.name?.forename} {userData?.name?.surname}\r\n                            </p>\r\n                        </div>\r\n                        <div className={classes[\"user-basic-details-userbio\"]}>\r\n                            <p className={classes[\"user-bio\"]}>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <form className={classes[\"user-profile-cv\"]} onSubmit={handleSubmit}>\r\n                    <div className={classes[\"cv-column\"]}>\r\n                        <div className={classes[\"cv-subcolumn\"]}>\r\n                            <div className={classes[\"cv-subcolumn-heading\"]}>\r\n                                <h1>MY BIOGRAPHY</h1>\r\n                            </div>\r\n                            <div className={classes[\"cv-content\"]}>\r\n                                <textarea value={userData?.cv?.biography} name=\"biography\" className={classes[\"cv-text-area\"]} onChange={(e) => setUserData({...userData, cv: {...userData.cv, biography: e.target.value}})} maxlength=\"320\"/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={classes[\"cv-subcolumn\"]}>\r\n                            <div className={classes[\"cv-subcolumn-heading\"]}>\r\n                                <h1>MY EXPERIENCE</h1>\r\n                            </div>\r\n                            <div className={classes[\"cv-content\"]}>\r\n                                <textarea value={userData?.cv?.experience} name=\"experience\" className={classes[\"cv-text-area\"]} onChange={(e) => setUserData({...userData, cv: {...userData.cv, experience: e.target.value}})} maxlength=\"320\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes[\"cv-column\"]}>\r\n                        <div className={classes[\"cv-subcolumn\"]}>\r\n                            <div className={classes[\"cv-subcolumn-heading\"]}>\r\n                                <h1>MY EDUCATION</h1>\r\n                            </div>\r\n                            <div className={classes[\"cv-content\"]}>\r\n                                <textarea value={userData?.cv?.education} name=\"education\" className={classes[\"cv-text-area\"]} onChange={(e) => setUserData({...userData, cv: {...userData.cv, education: e.target.value}})} maxlength=\"320\"/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={classes[\"cv-subcolumn\"]}>\r\n                            <div className={classes[\"cv-subcolumn-heading\"]}>\r\n                                <h1>MY SKILLS</h1>\r\n                            </div>\r\n                            <div className={classes[\"cv-content\"]}>\r\n                                <textarea value={userData?.cv?.skills} name=\"skills\" className={classes[\"cv-text-area\"]} onChange={(e) => setUserData({...userData, cv: {...userData.cv, skills: e.target.value}})} maxlength=\"320\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className={classes[\"submit-btn\"]}>Save</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\redux\\reducers\\user.js",["205"],"import { DELETE_USER, UPDATE_USER, FETCH_ALL_USER, FETCH_USER, USER_JOB_APPLY, USER_GET_APPLICANTS, USER_JOB_STATE} from '../../constants/actionTypes';\r\n\r\nexport default (state = [], action) => {\r\n    switch(action.type) {\r\n        case FETCH_ALL_USER:\r\n            return action.payload;\r\n        case FETCH_USER:\r\n            return action.payload;\r\n        case UPDATE_USER:\r\n            return state.map((user) => (user._id === action.payload._id ? action.payload : user));\r\n        case DELETE_USER:\r\n            return state.filter((user) => user._id !== action.payload);\r\n        case USER_JOB_APPLY:\r\n            return action.payload;\r\n        case USER_GET_APPLICANTS:\r\n            return action.payload;\r\n        case USER_JOB_STATE:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\redux\\reducers\\businessAuth.js",[],"C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\pages\\business\\business.js",["206"],"import React, { useState } from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { businessSignIn, businessSignUp } from '../../../../../redux/actions/businessAuth';\r\n\r\nconst initialState = { email: '', password: '', confirmPassword: '' }\r\n\r\nconst Business = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const [formData, setFormData] = useState(initialState);\r\n\r\n    const [click, setClick] = useState(false);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(click) {\r\n            dispatch(businessSignUp(formData, history))\r\n        } else {\r\n            dispatch(businessSignIn(formData, history))\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"email\" name=\"email\" placeholder=\"Email Address\" required onChange={handleChange}/>\r\n            <input type=\"password\" name=\"password\" placeholder=\"Password\" required onChange={handleChange}/>\r\n            <button type=\"submit\" >Login</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Business;","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\redux\\actions\\businessAuth.js",[],"C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\pages\\search\\search.js",["207","208","209","210","211"],"import React, { useEffect, useState } from 'react';\r\nimport classes from './search.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport JobsList from './jobsList/jobsList';\r\n\r\nconst Search = (props) => {\r\n    /*let jobsList = props?.location?.searchProps?.search;*/\r\n\r\n    let jobsList = useSelector((state) => state?.job);\r\n    console.log(jobsList);\r\n\r\n    useEffect(() => {\r\n        setPageJobs(jobsList?.slice(0,10));\r\n        setPage({page: 1});\r\n        setNumPages(Math.ceil(jobsList?.length / 10));\r\n\r\n        pagesArray = [];\r\n        for(let i=0; i<numPages; i++){\r\n            pagesArray?.push(i+1);            \r\n        }\r\n        setIndex(pagesArray.map(page => <p onClick={()=>setPage({page: page})} className={classes[\"index-select\"]}>{page}</p>));\r\n    }, [jobsList])\r\n\r\n    const [pageJobs, setPageJobs] = useState(jobsList.slice(0, 10))\r\n    let pagesArray = [];\r\n    let indexStart;\r\n\r\n    const [page, setPage] = useState({page: 1});\r\n    const [numPages, setNumPages] = useState(Math.ceil(jobsList?.length / 10));\r\n\r\n    const [index, setIndex] = useState(null);\r\n\r\n    useEffect(() => {\r\n        for(let i=0; i<numPages; i++){\r\n            pagesArray?.push(i+1);            \r\n        }\r\n        setIndex(pagesArray.map(page => <p onClick={()=>setPage({page: page})} className={classes[\"index-select\"]}>{page}</p>));\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        indexStart = page?.page*10-10;\r\n        console.log(indexStart);\r\n        setPageJobs(jobsList.slice(indexStart, indexStart+10));\r\n    }, [page])\r\n\r\n    if(jobsList.length == 0){\r\n        return (\r\n            <div className={classes[\"search-container\"]}>\r\n                <div className={classes[\"search-container-2\"]}>\r\n                    <div className={classes[\"search-heading\"]}>\r\n                        <h1>Search Results...</h1>\r\n                    </div>\r\n                    <div className={classes[\"jobs-container\"]}>\r\n                        <h1>No Jobs Found, Please search again.</h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className={classes[\"search-container\"]}>\r\n            <div className={classes[\"search-container-2\"]}>\r\n                <div className={classes[\"search-heading\"]}>\r\n                    <h1>Search Results...</h1>\r\n                </div>\r\n                <div className={classes[\"jobs-container\"]}>\r\n                    <JobsList jobs={pageJobs}/>\r\n                </div>\r\n                <div className={classes[\"page-selector\"]}>\r\n                    {index ? index : null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\redux\\actions\\jobs.js",[],"C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\redux\\reducers\\jobs.js",["212"],"import { DELETE_JOB, UPDATE_JOB, FETCH_ALL_JOB, FETCH_JOB, CREATE_JOB, SEARCH_JOB, FETCH_SOME_JOBS } from '../../constants/actionTypes';\r\n\r\nexport default (job = [], action) => {\r\n    switch(action.type) {\r\n        case FETCH_ALL_JOB:\r\n            return action.payload;\r\n        case FETCH_JOB:\r\n            return action.payload;\r\n        case UPDATE_JOB:\r\n            return job.map((job) => (job._id === action.payload._id ? action.payload : job));\r\n        case DELETE_JOB:\r\n            return job.filter((job) => job._id !== action.payload);\r\n        case CREATE_JOB:\r\n            return [...job, action.payload];\r\n        case SEARCH_JOB:\r\n            return action.payload;\r\n        case FETCH_SOME_JOBS:\r\n            return action.payload;\r\n        default:\r\n            return job;\r\n    }\r\n};\r\n","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\pages\\about\\about.js",["213"],"import React from 'react';\r\n\r\nimport Profile from '../profile/Profile';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div />\r\n    )\r\n}\r\n\r\nexport default About;","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\pages\\profile\\Profile.js",["214","215","216"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getAccount, updateAccount } from '../../../../../redux/actions/auth';\r\nimport classes from './Profile.css';\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const userId = \"603fd62201a14890bcaa3b43\";\r\n\r\n    const user = useSelector((state) => state.user);\r\n    console.log(user);\r\n\r\n    useEffect(() => {\r\n        dispatch(getAccount(userId));\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classes[\"profile-wrapper\"]}>\r\n            <div className={classes[\"user-profile\"]}>\r\n                <div className={classes[\"user-profile-details\"]}>\r\n                    <div className={classes[\"user-img\"]}>\r\n                    </div>\r\n\r\n                    <div className={classes[\"user-basic-details\"]}>\r\n                        <div className={classes[\"user-basic-details-username\"]}>\r\n                            <p className={classes[\"user-name\"]}>\r\n                                {user?.name?.forename} {user?.name?.middlename} {user?.name?.surname}\r\n                            </p>\r\n                        </div>\r\n                        <div className={classes[\"user-basic-details-userbio\"]}>\r\n                            <p className={classes[\"user-bio\"]}>\r\n                                {user?.cv?.biography}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n\r\n                <div className={classes[\"user-profile-cv\"]}>\r\n                    <div className={classes[\"cv-column\"]}>\r\n                        <div className={classes[\"cv-subcolumn\"]}>\r\n                            <div className={classes[\"cv-subcolumn-heading\"]}>\r\n                                <h1>MY BIOGRAPHY</h1>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={classes[\"cv-subcolumn\"]}>\r\n                            <div className={classes[\"cv-subcolumn-heading\"]}>\r\n                                <h1>MY EXPERIENCE</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes[\"cv-column\"]}>\r\n                        <div className={classes[\"cv-subcolumn\"]}>\r\n                            <div className={classes[\"cv-subcolumn-heading\"]}>\r\n                                <h1>MY EDUCATION</h1>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={classes[\"cv-subcolumn\"]}>\r\n                            <div className={classes[\"cv-subcolumn-heading\"]}>\r\n                                <h1>MY SKILLS</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes[\"cv-column\"]}>\r\n                        <div className={classes[\"cv-subcolumn\"]}>\r\n                            <div className={classes[\"cv-subcolumn-heading\"]}>\r\n                                <h1>CONTACT DETAILS</h1>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={classes[\"cv-subcolumn\"]}>\r\n                            <div className={classes[\"cv-subcolumn-heading\"]}>\r\n                                <h1>OYT EXPERIENCE</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Profile;","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\pages\\mybusiness\\mybusiness.js",["217","218","219"],"import React, { useState, useEffect} from 'react';\r\n\r\nimport classes from './mybusiness.css';\r\n\r\nimport BusinessProfile from './businessComponents/businessProfile/businessProfile';\r\nimport BusinessJobs from './businessComponents/businessJobs/businessJobs';\r\n\r\nimport { getBusinessAccount } from '../../../../../redux/actions/businessAuth';\r\n\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst MyBusiness = () => {\r\n    const dispatch = useDispatch();\r\n    const [currentUser, setCurrentUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n\r\n    useEffect(() => {\r\n        setCurrentUser(JSON.parse(localStorage.getItem('profile')));\r\n        dispatch(getBusinessAccount(currentUser?.result?._id));\r\n    }, [])\r\n\r\n    const [currentComponent, setCurrentComponent] = useState(<BusinessProfile />)\r\n    useEffect(() => {\r\n        dispatch(getBusinessAccount(currentUser?.result?._id));\r\n    }, [currentComponent])\r\n\r\n    return(\r\n        <div className={classes[\"account-wrapper\"]}>\r\n\r\n            <div className={classes[\"account-dashboard\"]}>\r\n\r\n                <div className={classes[\"account-navbar\"]}>\r\n\r\n                    <div className={classes[\"navbar-links\"]}>\r\n                        <ul className={classes[\"links-ul\"]}>\r\n                            <li className={classes[\"links-li\"]}>\r\n                                <p className={classes[\"links-link\"]} onClick={()=>setCurrentComponent(<BusinessProfile />)}><i class=\"fas fa-house-user\"></i> My Business</p>\r\n                            </li>\r\n\r\n                            <li className={classes[\"links-li\"]}>\r\n                                <p className={classes[\"links-link\"]} onClick={()=>setCurrentComponent(<BusinessJobs />)}><i class=\"fas fa-calendar-alt\"></i>My Jobs</p>\r\n                            </li>\r\n\r\n                            <li className={classes[\"links-li\"]}>\r\n                                <p className={classes[\"links-link\"]}><i class=\"fas fa-edit\"></i> Reviews</p>\r\n                            </li>\r\n\r\n                            <li className={classes[\"links-li\"]}>\r\n                                <p className={classes[\"links-link\"]}><i class=\"fas fa-envelope\"></i> Inbox</p>\r\n                            </li>\r\n\r\n                            <li className={classes[\"links-li\"]}>\r\n                                <p className={classes[\"links-link\"]}><i class=\"fas fa-cog\"></i> Settings</p>\r\n                            </li>\r\n\r\n                        </ul>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className={classes[\"dashboard-display\"]}>\r\n                    {currentComponent}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyBusiness;","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\pages\\oytBusiness\\oytBusiness.js",["220"],"import React, { useState } from 'react';\r\n\r\nimport classes from './oytBusiness.css';\r\n\r\nimport img from '../../../../../assets/images/photographer-background.jpg';\r\nimport BusinessAccountModal from '../../modals/businessAccount/businessAccountModal';\r\n\r\nconst OYTBusiness = () => {\r\n    const [modal, setModal] = useState(false);\r\n    const toggleModal = () => setModal(!modal);\r\n\r\n    return(\r\n        <div className={classes[\"business-wrapper\"]}>\r\n            <div className={classes[\"image-wrapper\"]}>\r\n                <img src={img} className={classes[\"background-img\"]}/>\r\n                <h1 className={classes[\"img-text\"]}>\r\n                    On Your Terms\r\n                </h1>\r\n                <h1 className={classes[\"img-text-2\"]}>\r\n                    Business\r\n                </h1>\r\n\r\n                <p className={classes[\"img-text-3\"]}>\r\n                    Upload new vacancies <br/>\r\n                    Allow our talented pool of users to find your jobs <br />\r\n                    Embrace the simplicity of OYT Business\r\n                </p>\r\n\r\n                <button className={classes[\"join-btn\"]} onClick={toggleModal}>\r\n                    Join Today\r\n                </button>\r\n                <BusinessAccountModal modal={modal} toggle={toggleModal} setModal={setModal} option={true}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OYTBusiness;","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\modals\\businessAccount\\businessAccountModal.js",["221","222","223","224"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { useDispatch } from 'react-redux'\r\nimport classes from './businessAccountModal.css';\r\nimport ReactDom from 'react-dom';\r\nimport img from '../../../../../assets/images/businessWoman.jpg';\r\nimport oytimg from '../../../../../assets/images/logo.png';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { businessSignIn, businessSignUp } from '../../../../../redux/actions/businessAuth'\r\n\r\nconst initialState = { email: '', password: '', confirmPassword: '', businessName: '' }\r\n\r\nconst BusinessAccountModal = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const [formData, setFormData] = useState(initialState);\r\n\r\n    const [click, setClick] = useState(props?.option);\r\n    const toggleClick = () => setClick(!click);\r\n\r\n    useEffect(() => {\r\n        setClick(props?.option);\r\n    }, [props?.option])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(click) {\r\n            dispatch(businessSignUp(formData, history))\r\n        } else {\r\n            dispatch(businessSignIn(formData, history))\r\n        }\r\n\r\n        (props.setModal(false))\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value })\r\n    }\r\n\r\n\r\n    let selection;\r\n    if(click){\r\n        selection=(\r\n            <>\r\n            <form className={classes[\"form-contents\"]} onSubmit={handleSubmit}>\r\n                <input type=\"text\" name=\"businessName\" placeholder=\"Business Name\" className={classes[\"form-element\"]} required onChange={handleChange}/>\r\n                <input type=\"email\" name=\"email\" placeholder=\"Email Address\" className={classes[\"form-element\"]} required onChange={handleChange}/>\r\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" className={classes[\"form-element\"]} required onChange={handleChange}/>\r\n                <input type=\"password\" name=\"confirmPassword\" placeholder=\"Re-enter Password\" className={classes[\"form-element\"]} required onChange={handleChange}/>\r\n                <button type=\"submit\" className={classes[\"form-submit\"]}>Register</button>\r\n                <div className={classes[\"oyt-div\"]}>\r\n                    <img src={oytimg} className={classes[\"oyt-img\"]}/>\r\n                </div>\r\n            </form>\r\n            </>\r\n        )\r\n    }\r\n    else {\r\n        selection = (\r\n            <>\r\n            <form className={classes[\"form-contents\"]} onSubmit={handleSubmit}>\r\n                <input type=\"email\" name=\"email\" placeholder=\"Email Address\" className={classes[\"form-element\"]} required onChange={handleChange}/>\r\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" className={classes[\"form-element\"]} required onChange={handleChange}/>\r\n                <button type=\"submit\" className={classes[\"form-submit\"]}>Login</button>\r\n                <div className={classes[\"oyt-div\"]}>\r\n                    <img src={oytimg} className={classes[\"oyt-img\"]}/>\r\n                </div>\r\n            </form>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    if(props.modal) {\r\n        return ReactDom.createPortal(\r\n            <>\r\n                <div className={classes[\"modal-background\"]} onClick={props.toggle} />\r\n\r\n                \r\n                <div className={classes[\"modal\"]}>\r\n                    <div className={classes[\"modal-content\"]}>\r\n\r\n                        <div className={classes[\"account\"]}>\r\n                            <div className={classes[\"help-selection\"]}>\r\n                                <button className={click ? classes[\"selected-btn\"] : classes[\"btn\"]} onClick={()=>setClick(true)}>Register</button>\r\n                                <button className={click ? classes[\"btn\"] : classes[\"selected-btn\"]} onClick={()=>setClick(false)}>Login</button>\r\n                            </div>\r\n\r\n                            <div className={classes[\"account-form\"]}>\r\n                                {selection}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={classes[\"img-container\"]}>\r\n                            <img src={img} className={classes[\"img\"]}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>,\r\n            document.getElementById('portal')\r\n        );\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default BusinessAccountModal;","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\pages\\mybusiness\\businessComponents\\businessProfile\\businessProfile.js",["225","226","227"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport FileBase from 'react-file-base64';\r\n\r\nimport classes from './businessProfile.css';\r\n\r\nimport { getBusinessAccount } from '../../../../../../../redux/actions/businessAuth';\r\nimport { updateBusinessAccount } from '../../../../../../../redux/actions/businessAuth';\r\n\r\n\r\nconst BusinessProfile = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [businessData, setBusinessData] = useState(null);\r\n    const [currentUser, setCurrentUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n\r\n    useEffect(() => {\r\n        setCurrentUser(JSON.parse(localStorage.getItem('profile')));\r\n        dispatch(getBusinessAccount(currentUser?.result?._id));\r\n    }, [])\r\n\r\n    const [user, setUser] = useState(useSelector(state => state.businessUser));\r\n    useEffect(() => {\r\n        if (user) setBusinessData(user);\r\n    }, [user]);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateBusinessAccount(businessData._id, businessData));\r\n        dispatch(getBusinessAccount(businessData?._id));\r\n    }\r\n    \r\n    return (\r\n        <div className={classes[\"profile-wrapper\"]}>\r\n            <form className={classes[\"user-profile\"]} onSubmit={handleSubmit}>\r\n                <div className={classes[\"user-heading\"]}>\r\n                    <h1>{businessData?.information?.businessName}</h1>\r\n                    <div className={classes[\"save-button\"]}>\r\n                        <button>Save Details</button>\r\n                    </div>\r\n                </div>\r\n                <div className={classes[\"user-details\"]}>\r\n                    <div className={classes[\"user-details-2\"]}>\r\n                        <div className={classes[\"user-details-info\"]}>\r\n                            <textarea placeholder=\"Business Biography\" value={businessData?.information?.businessBio} className={classes[\"textarea-bio\"]} onChange={(e) => setBusinessData({ ...businessData, information: {...businessData?.information, businessBio: e.target.value }})} maxlength=\"320\"/>\r\n                            <textarea placeholder=\"Business Type\" value={businessData?.information?.businessType} className={classes[\"textarea-type\"]} onChange={(e) => setBusinessData({ ...businessData, information: {...businessData?.information, businessType: e.target.value }})} maxlength=\"50\"/>\r\n                        </div>\r\n                        <div className={classes[\"user-details-img\"]}>\r\n                            <img src={businessData?.information?.selectedFile} />\r\n                            <FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setBusinessData({ ...businessData, information: {...businessData?.information, selectedFile: base64 }})} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default BusinessProfile;","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\pages\\mybusiness\\businessComponents\\businessJobs\\businessJobs.js",["228","229","230","231","232"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getBusinessUserJobs } from '../../../../../../../redux/actions/businessAuth';\r\nimport { deleteJob } from '../../../../../../../redux/actions/jobs';\r\nimport { getAccount } from '../../../../../../../redux/actions/auth';\r\n\r\nimport NewJob from '../../../../modals/jobs/newJob/newJob';\r\nimport Job from '../../../../modals/jobs/existingJob/job';\r\nimport JobSettings from '../../../../modals/jobs/jobSettings/jobSettings';\r\nimport Verify from '../../../../modals/verification/verify';\r\nimport EditJob from '../../../../modals/jobs/editJob/editJob';\r\n\r\nimport classes from './businessJobs.css';\r\nimport { getSomeJobs } from '../../../../../../../redux/actions/jobs';\r\nimport { getJobApplicants } from '../../../../../../../redux/actions/auth';\r\n\r\nconst BusinessJobs = () => {\r\n    const [newJobModal, setNewJobModal] = useState(false);\r\n    const toggleNewJobModal = () => setNewJobModal(!newJobModal);\r\n\r\n    const [modalSelection, setModalSelection] = useState();\r\n \r\n    const [jobsSelection, setJobsSelection] = useState(\"Pending\");\r\n\r\n    const [jobModal, setJobModal] = useState(false);\r\n    const toggleJobModal = () => setJobModal(!jobModal);\r\n\r\n    const [editModal, setEditModal] = useState(false);\r\n    const toggleEditModal = () => setEditModal(!editModal);\r\n\r\n    const [editJobsModal, setEditJobsModal] = useState(false);\r\n    const toggleEditJobsModal = () => setEditJobsModal(!editJobsModal);\r\n\r\n    const [verifyModal, setVerifyModal] = useState(false);\r\n    const toggleVerifyModal = () => setVerifyModal(!verifyModal);\r\n\r\n    const dispatch = useDispatch();\r\n    const [business, setBusiness] = useState(useSelector((state) => state.businessUser));\r\n\r\n    const [request, setRequest] = useState(null);\r\n\r\n    const [businessData, setBusinessData] = useState(null);\r\n    const [selectedJob, setSelectedJob] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setBusinessData(business);\r\n\r\n        dispatch(getSomeJobs(business?.jobs));\r\n    }, []);\r\n\r\n    const jobs = useSelector((state) => state.job);\r\n\r\n    let pendingJobs, completedJobs = [];\r\n\r\n    if(jobs){\r\n        if(business?.jobs?.currentJobs){\r\n            pendingJobs = jobs?.map((job) => business?.jobs?.currentJobs?.includes(job?._id) ? <li><div onClick={()=> {\r\n                setJobModal(!jobModal);\r\n                setSelectedJob(job);\r\n            }}>{job?.title} - {job?.description} {job?.jobState===\"application\" ? <p>Applications Stage</p> : <p>Job is Currently Active</p>}</div>\r\n                <div>\r\n                    {job?.jobState===\"application\" ? <div><i onClick={()=>{setRequest(\"DELETE_JOB\"); setSelectedJob(job); setVerifyModal(true);}} class=\"fas fa-trash-alt\"></i><i class=\"fas fa-edit\" onClick={()=>{setSelectedJob(job); dispatch(getJobApplicants(job?.applicants?.pending)); setEditModal(true); setModalSelection(\"applicants\");}}></i></div> : \r\n                    job?.jobState===\"active\" ? <div><i  onClick={()=>{setSelectedJob(job); dispatch(getAccount(job?.applicants?.successful)); setEditJobsModal(true); setModalSelection(\"successful\");}}class=\"fas fa-cog\"></i></div> : null}\r\n                </div></li> : null);\r\n            pendingJobs = pendingJobs.filter(job => job !== null);\r\n        }\r\n\r\n        if(business?.jobs?.expiredJobs){\r\n            completedJobs = jobs?.map((job) => business?.jobs?.expiredJobs?.includes(job?._id) ? <li><div onClick={()=> {\r\n                setJobModal(!jobModal);\r\n                setSelectedJob(job);\r\n            }}>{job?.title} - {job?.description} <p>Job is Completed</p></div><div><i  onClick={()=>{setSelectedJob(job); dispatch(getAccount(job?.applicants?.successful)); setEditJobsModal(true); setModalSelection(\"successful\");}}class=\"fas fa-cog\"></i></div></li> : null);\r\n            completedJobs = completedJobs.filter(job => job !== null);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className={classes[\"jobs-container\"]}>\r\n            <div className={classes[\"jobs-container-2\"]}>\r\n                <div className={classes[\"jobs-selector\"]}>\r\n                    <div className={jobsSelection===\"Pending\" ? classes[\"jobs-heading-active\"] : classes[\"jobs-heading\"]} onClick={()=>setJobsSelection(\"Pending\")}>Active</div>\r\n                    <div className={jobsSelection===\"Completed\" ? classes[\"jobs-heading-active\"] : classes[\"jobs-heading\"]} onClick={()=>setJobsSelection(\"Completed\")}>Completed</div>\r\n                    <button onClick={toggleNewJobModal} className={classes[\"new-job\"]}>New Job <i class=\"fas fa-plus\"></i></button>\r\n                </div>\r\n\r\n                <div className={classes[\"jobs-display\"]}>\r\n                    <ul>\r\n                        {jobsSelection === \"Pending\" ? pendingJobs : null}\r\n                        {jobsSelection === \"Completed\" ? completedJobs: null}\r\n                    </ul>\r\n                    <div>\r\n                        <NewJob modal={newJobModal} setModal={setNewJobModal} toggle={toggleNewJobModal}/>\r\n                        <Job modal={jobModal} setModal={setJobModal} toggle={toggleJobModal} job={selectedJob}/>\r\n\r\n                        {modalSelection===\"applicants\" ? <JobSettings modal={editModal} setModal={setEditModal} toggle={toggleEditModal} job={selectedJob} /> : <EditJob modal={editJobsModal} setModal={setEditJobsModal} toggle={toggleEditJobsModal} job={selectedJob}/>}\r\n\r\n                        <Verify request = {request} modal={verifyModal} setModal={setVerifyModal} toggle={toggleVerifyModal} job={selectedJob}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BusinessJobs;","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\modals\\jobs\\newJob\\newJob.js",["233","234","235"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport ReactDom from 'react-dom';\r\nimport FileBase from 'react-file-base64';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getBusinessAccount } from '../../../../../../redux/actions/businessAuth';\r\n\r\nimport { createJob } from '../../../../../../redux/actions/jobs';\r\n\r\nimport classes from './newJob.css';\r\n\r\nconst NewJob = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [business, setBusiness] = useState(useSelector((state) => state.businessUser));\r\n    const [businessData, setBusinessData] = useState(null)\r\n\r\n    const [currentSkill, setCurrentSkill] = useState(null);\r\n\r\n    const [jobData, setJobData] = useState({\r\n        title: \"\",\r\n        description: \"\",\r\n        payment: \"\",\r\n        companyId: business?._id,\r\n        applicants: {\r\n            pending: [],\r\n            rejected: [],\r\n            successful: \"\"\r\n        },\r\n        timeline: {\r\n            deadline: \"\",\r\n            startDate: \"\",\r\n            finishDate: \"\"\r\n        },\r\n        skills: [],\r\n        selectedFile: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        setBusinessData(business);\r\n    }, [business]);\r\n\r\n    useEffect(() => {\r\n        setJobData({title: \"\",\r\n        description: \"\",\r\n        payment: \"\",\r\n        companyId: business?._id,\r\n        applicants: {\r\n            pending: [],\r\n            rejected: [],\r\n            successful: \"\"\r\n        },\r\n        timeline: {\r\n            deadline: \"\",\r\n            startDate: \"\",\r\n            finishDate: \"\"\r\n        },\r\n        skills: [],\r\n        selectedFile: \"\"})\r\n    }, [props?.modal])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(createJob(jobData));\r\n        dispatch(getBusinessAccount(businessData?._id))\r\n        props?.setModal(false);\r\n    }\r\n\r\n    const handleSkill = (e) => {\r\n        e.preventDefault();\r\n\r\n        let skills = jobData?.skills;\r\n        if(currentSkill){\r\n            skills?.push(currentSkill)\r\n        }\r\n        setCurrentSkill(null);\r\n        document.getElementById('skill').value=\"\";\r\n\r\n        setJobData({...jobData, skills: skills})\r\n    }\r\n\r\n\r\n    if(props.modal){\r\n        return ReactDom.createPortal(\r\n            <>\r\n                <div className={classes[\"modal-background\"]} onClick={props.toggle} />\r\n\r\n                <div className={classes[\"modal\"]}>\r\n                    <div className={classes[\"modal-heading\"]}>\r\n                        <div className={classes[\"mh-1\"]}>\r\n                            <h1>New Job</h1>\r\n                        </div>\r\n                        <div className={classes[\"mh-2\"]}>\r\n                            <i onClick={props.toggle}class=\"fas fa-times\"></i>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes[\"modal-form-container\"]}>\r\n                        <form className={classes[\"modal-form\"]} onSubmit={handleSubmit}>\r\n                            <div className={classes[\"form-left\"]}>\r\n                                <div className={classes[\"form-left-item\"]}>\r\n                                    <label>Job Title: </label><input required=\"true\" type=\"text\" placeholder=\"eg React Web Developer\" onChange={(e) => setJobData({ ...jobData, title: e.target.value })}/>\r\n                                </div>\r\n                                \r\n                                <div className={classes[\"form-left-item\"]}>\r\n                                    <label>Payment: </label><input required=\"true\" type=\"text\" placeholder=\"eg. £25/ph\" onChange={(e) => setJobData({ ...jobData, payment: e.target.value })}/>\r\n                                </div>\r\n\r\n                                <div className={classes[\"form-left-item\"]}>\r\n                                    <label>Deadline: </label><input required=\"true\" type=\"date\" onChange={(e) => setJobData({ ...jobData, timeline: { ...jobData.timeline, deadline: e.target.value }})} />\r\n                                </div>\r\n\r\n                                <div className={classes[\"form-left-item\"]}>\r\n                                    <label>Start Date: </label><input required=\"true\" type=\"date\" onChange={(e) => setJobData({ ...jobData, timeline: { ...jobData.timeline, startDate: e.target.value }})} />\r\n                                </div>\r\n\r\n                                <div className={classes[\"form-left-item\"]}>\r\n                                    <label>End Date: </label><input required=\"true\" type=\"date\" onChange={(e) => setJobData({ ...jobData, timeline: { ...jobData.timeline, finishDate: e.target.value }})}/>\r\n                                </div>\r\n\r\n                                <div className={classes[\"form-left-item\"]}>\r\n                                    <input type=\"text\" id=\"skill\" placeholder=\"eg. CSS\" onChange={(e) => setCurrentSkill(e.target.value)}/>\r\n                                    <button type=\"submit\" onClick={handleSkill}>Add Skill</button>\r\n                                </div>\r\n\r\n                        \r\n\r\n                                <div className={classes[\"form-left-item\"]}>\r\n                                    <label>Skills: </label><input type=\"text\" value={jobData?.skills}/>\r\n                                </div>\r\n                                <div className={classes[\"form-left-item\"]}>\r\n                                    <button type=\"submit\">Add Job</button>\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes[\"form-right\"]}>\r\n                                <div className={classes[\"form-right-desc\"]}>\r\n                                    <div className={classes[\"form-right-item\"]}>\r\n                                        <label>Job Title: </label><textarea required=\"true\" placeholder=\"eg. This job involves developing a website for a clothing brand company...\" onChange={(e) => setJobData({ ...jobData, description: e.target.value })}/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className={classes[\"form-right-img\"]}>\r\n                                    <img src={jobData?.selectedFile}className={classes[\"form-img\"]} />\r\n                                    <FileBase required=\"true\" type=\"file\" multiple={false} onDone={({ base64 }) => setJobData({ ...jobData, selectedFile: base64 })} />\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </>,\r\n            document.getElementById('portal')\r\n        )\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default NewJob;","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\modals\\jobs\\existingJob\\job.js",["236","237","238","239","240"],"import React, { useState, useEffect } from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getBusinessAccount } from '../../../../../../redux/actions/businessAuth';\r\nimport classes from './job.css';\r\nimport { userJobApply } from '../../../../../../redux/actions/auth';\r\n\r\nimport Business from '../../business/business';\r\n\r\nconst Job = (props) => {\r\n    const [user, setUser] = useState(useSelector((state) => state?.user));\r\n    const [businessUser, setBusinessUser] = useState(useSelector((state) => state?.businessUser));\r\n    const dispatch = useDispatch();\r\n\r\n    const [jobModal, setJobModal] = useState(false);\r\n    const toggleJobModal = () => setJobModal(!jobModal);\r\n\r\n    const userApply = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(userJobApply(user?._id, props?.job?._id));\r\n        props?.setModal(false);\r\n    }\r\n    \r\n    if(props?.modal){\r\n        return ReactDom.createPortal(\r\n            <>\r\n                <div className={classes[\"modal-background\"]} onClick={props.toggle} />\r\n\r\n                <div className={classes[\"modal\"]}>\r\n                    <div className={classes[\"modal-heading\"]}>\r\n                        <div className={classes[\"mh-1\"]}>\r\n                            <h1>{props?.job?.title}</h1>\r\n                        </div>\r\n                        <div className={classes[\"mh-2\"]}>\r\n                            <i onClick={props.toggle}class=\"fas fa-times\"></i>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes[\"modal-form-container\"]}>\r\n                        <form className={classes[\"modal-form\"]}>\r\n                            <div className={classes[\"form-left\"]}>\r\n                                <div className={classes[\"form-left-item\"]}>\r\n                                    <label>Job Title: </label><input value={props?.job?.title} required=\"true\" type=\"text\" />\r\n                                </div>\r\n                                \r\n                                <div className={classes[\"form-left-item\"]}>\r\n                                    <label>Payment: </label><input value={props?.job?.payment} required=\"true\" type=\"text\"/>\r\n                                </div>\r\n\r\n                                <div className={classes[\"form-left-item\"]}>\r\n                                    <label>Deadline: </label><input value={props?.job?.timeline?.deadline} required=\"true\" type=\"text\"/>\r\n                                </div>\r\n\r\n                                <div className={classes[\"form-left-item\"]}>\r\n                                    <label>Start Date: </label><input value={props?.job?.timeline?.finishDate} required=\"true\" type=\"text\" />\r\n                                </div>\r\n\r\n                                <div className={classes[\"form-left-item\"]}>\r\n                                    <label>End Date: </label><input value={props?.job?.timeline?.startDate} required=\"true\" type=\"text\"/>\r\n                                </div>\r\n\r\n                                <div className={classes[\"form-left-item\"]}>\r\n                                    <label>Skills: </label><input type=\"text\" value={props?.job?.skills}/>\r\n                                </div>\r\n\r\n                                <div className={classes[\"form-left-item\"]}>\r\n                                    <div className={classes[\"form-btns\"]}>\r\n                                        <button onClick={(e) => {e.preventDefault(); dispatch(getBusinessAccount(props?.job?.companyId)); setJobModal(true);}}>View Business</button>\r\n                                        { !JSON.parse(localStorage.getItem('profile')) || JSON.parse(localStorage.getItem('profile'))?.result?.accountType===\"Business\" ? null : (user?.jobs?.pending?.includes(props?.job?._id) || user?.jobs?.rejected?.includes(props?.job?._id) || props?.job?.jobState!==\"application\" ? <button disabled=\"true\">Unable to apply for this vacancy.</button> : <button onClick={userApply}>Apply for Job</button>)}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className={classes[\"form-right\"]}>\r\n                                <div className={classes[\"form-right-desc\"]}>\r\n                                    <div className={classes[\"form-right-item\"]}>\r\n                                        <label>Job Description: </label><textarea value={props?.job?.description} required=\"true\"/>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className={classes[\"form-right-img\"]}>\r\n                                    <img src={props?.job?.selectedFile}className={classes[\"form-img\"]} />\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n                <Business modal={jobModal} setModal={setJobModal} toggle={toggleJobModal} />\r\n            </>,\r\n            document.getElementById('portal')\r\n            \r\n        )\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default Job;","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\redux\\reducers\\businessUser.js",["241"],"import { DELETE_BUSINESS, UPDATE_BUSINESS, FETCH_ALL_BUSINESS, FETCH_BUSINESS, FETCH_BUSINESS_JOBS } from '../../constants/actionTypes';\r\n\r\nexport default (state = [], action) => {\r\n    switch(action.type) {\r\n        case FETCH_ALL_BUSINESS:\r\n            return action.payload;\r\n        case FETCH_BUSINESS:\r\n            return action.payload;\r\n        case UPDATE_BUSINESS:\r\n            return state.map((business) => (business._id === action.payload._id ? action.payload : business));\r\n        case DELETE_BUSINESS:\r\n            return state.filter((business) => business._id !== action.payload);\r\n        case FETCH_BUSINESS_JOBS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\pages\\search\\jobsList\\jobsList.js",[],"C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\pages\\search\\jobsList\\jobItem\\jobItem.js",[],"C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\pages\\account\\account-components\\Jobs\\myJobs.js",["242","243"],"import React, { useState, useEffect } from 'react';\r\nimport classes from './myJobs.css';\r\n\r\nimport { getSomeJobs } from '../../../../../../../redux/actions/jobs';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { userJobDelete, getAccount } from '../../../../../../../redux/actions/auth';\r\n\r\nimport Job from '../../../../modals/jobs/existingJob/job';\r\n\r\nconst MyJob = () => {\r\n    const [modal, setModal] = useState(false);\r\n    const toggleModal = () => setModal(!modal);\r\n\r\n    const [modalJob, setModalJob] = useState();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [jobsSelection, setJobsSelection] = useState(\"Active\");\r\n    const user = useSelector((state) => state?.user);\r\n\r\n    let pendingJobs, activeJobs, rejectedJobs, completedJobs = [];\r\n\r\n    useEffect(() => {\r\n        let currentJobs = (((user?.jobs?.pending.concat(user?.jobs?.active)).concat(user?.jobs?.completed)).concat(user?.jobs?.rejected));\r\n        dispatch(getSomeJobs({currentJobs}));\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let currentJobs = (((user?.jobs?.pending.concat(user?.jobs?.active)).concat(user?.jobs?.completed)).concat(user?.jobs?.rejected));\r\n        dispatch(getSomeJobs({currentJobs}));\r\n    }, [user])\r\n\r\n    const jobs = useSelector((state) => state.job);\r\n\r\n    const handleDelete = (job) => {\r\n        dispatch(userJobDelete(user?._id, job?._id));\r\n        dispatch(getAccount(user?._id));\r\n    }\r\n\r\n\r\n    if(jobs){\r\n        if(user?.jobs?.pending){\r\n            pendingJobs = jobs?.map((job) => user?.jobs?.pending?.includes(job?._id) ? <li><div onClick={() => {setModal(true); setModalJob(job);}}>{job?.title} - {job?.description.substr(0,50)}</div><i onClick={() => {handleDelete(job)}}class=\"fas fa-trash-alt\"></i></li> : null)\r\n            pendingJobs = pendingJobs?.filter(job => job !== null);\r\n        }\r\n        if(user?.jobs?.active){\r\n            activeJobs = jobs?.map((job) => user?.jobs?.active?.includes(job?._id) ? <li><div onClick={() => {setModal(true); setModalJob(job);}}>{job?.title} - {job?.description.substr(0,50)}</div></li> : null)\r\n            activeJobs = activeJobs?.filter(job => job !== null);\r\n        }\r\n        if(user?.jobs?.rejected){\r\n            rejectedJobs = jobs?.map((job) => user?.jobs?.rejected?.includes(job?._id) ? <li><div onClick={() => {setModal(true); setModalJob(job);}}>{job?.title} - {job?.description.substr(0,50)}</div></li> : null)\r\n            rejectedJobs = rejectedJobs?.filter(job => job !== null);\r\n        }\r\n        if(user?.jobs?.completed){\r\n            completedJobs = jobs?.map((job) => user?.jobs?.completed?.includes(job?._id) ? <li><div onClick={() => {setModal(true); setModalJob(job);}}>{job?.title} - {job?.description.substr(0,50)}</div></li> : null)\r\n            completedJobs = completedJobs?.filter(job => job !== null);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes[\"jobs-container\"]}>\r\n            <div className={classes[\"jobs-container-2\"]}>\r\n                <div className={classes[\"jobs-selector\"]}>\r\n                    <div className={jobsSelection===\"Active\" ? classes[\"jobs-heading-active\"] : classes[\"jobs-heading\"]} onClick={()=>setJobsSelection(\"Active\")}>Active</div>\r\n                    <div className={jobsSelection===\"Pending\" ? classes[\"jobs-heading-active\"] : classes[\"jobs-heading\"]} onClick={()=>setJobsSelection(\"Pending\")}>Pending</div>\r\n                    <div className={jobsSelection===\"Completed\" ? classes[\"jobs-heading-active\"] : classes[\"jobs-heading\"]} onClick={()=>setJobsSelection(\"Completed\")}>Completed</div>\r\n                    <div className={jobsSelection===\"Rejected\" ? classes[\"jobs-heading-active\"] : classes[\"jobs-heading\"]} onClick={()=>setJobsSelection(\"Rejected\")}>Unsuccessful</div>\r\n                </div>\r\n\r\n                <div className={classes[\"jobs-display\"]}>\r\n                    <ul>\r\n                        {jobsSelection===\"Active\" ? activeJobs : null}\r\n                        {jobsSelection===\"Pending\" ? pendingJobs : null}\r\n                        {jobsSelection===\"Completed\" ? completedJobs : null}\r\n                        {jobsSelection===\"Rejected\" ? rejectedJobs : null}\r\n                    </ul>\r\n                    <Job modal={modal} setModal={setModal} toggle={toggleModal} job={modalJob}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyJob;","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\modals\\jobs\\jobSettings\\jobSettings.js",["244","245","246","247","248","249","250"],"import React, { useState, useEffect } from 'react';\r\nimport classes from './jobSettings.css';\r\nimport ReactDom from 'react-dom';\r\n\r\nimport { updateJobState } from '../../../../../../redux/actions/auth';\r\nimport Verify from '../../../modals/verification/verify';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst JobSettings = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [users, setUsers] = useState(useSelector((state) => state?.user));\r\n\r\n    const [verifyModal, setVerifyModal] = useState(false);\r\n    const toggle = () => setVerifyModal(!verifyModal);\r\n\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n\r\n    const [request, setRequest] = useState(null);\r\n\r\n    let applicants = [];\r\n    let test = useSelector((state) => state?.user)?.map(((user) => {applicants?.push(user)}));\r\n    console.log(applicants);\r\n\r\n    const job = props?.job;\r\n    let applicantsList = [];\r\n\r\n    const handleStateUpdate = (userId, newState) => {\r\n        dispatch(updateJobState(userId, job?._id, newState));\r\n        props?.setModal(false);\r\n    }\r\n\r\n    const updateApplicants = () => {\r\n        if(applicants){\r\n            applicantsList = applicants?.map((user) => <li>\r\n                <div className={classes[\"user-details\"]}>\r\n                    {user?.name?.forename} {user?.name?.middlename} {user?.name?.surname} - {user?.cv?.biography?.substr(0, 30)}\r\n                </div>\r\n                <div className={classes[\"user-actions\"]}>\r\n                    <button className={classes[\"show-user\"]}>Show User</button>\r\n                    <i onClick={()=>{setRequest(\"REJECT_APPLICANT\"); setCurrentUser(user); setVerifyModal(true);}} class=\"far fa-times-circle\"></i>\r\n                    <i onClick={()=>{setRequest(\"ACCEPT_APPLICANT\"); setCurrentUser(user); setVerifyModal(true);}} class=\"far fa-check-circle\"></i>\r\n                </div>\r\n            </li>)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateApplicants();\r\n    }, [props?.modal===true])\r\n\r\n    useEffect(() => {\r\n        if(users){\r\n            applicantsList = users?.map((user) => <li>\r\n                <div className={classes[\"user-details\"]}>\r\n                    {user?.name?.forename} {user?.name?.middlename} {user?.name?.surname} - {user?.cv?.biography?.substr(0, 30)}\r\n                </div>\r\n                <div className={classes[\"user-actions\"]}>\r\n                    <button className={classes[\"show-user\"]}>Show User</button>\r\n                    <i class=\"far fa-check-circle\"></i>\r\n                    <i class=\"far fa-times-circle\"></i>\r\n                    \r\n                </div>\r\n            </li>)\r\n        }\r\n    }, [useSelector((state) => state?.user)])\r\n\r\n\r\n    updateApplicants();\r\n    \r\n\r\n    const handleUpdate = (e) => {\r\n        e.preventDefault();\r\n\r\n        // update settings\r\n    }\r\n\r\n    if(props?.modal){\r\n        return ReactDom.createPortal(\r\n            <>\r\n                <div className={classes[\"modal-background\"]} onClick={()=>{props?.setModal(false); setUsers(null)}} />\r\n\r\n                <div className={classes[\"modal\"]}>\r\n                    <div className={classes[\"modal-heading\"]}>\r\n                        <h1>{job?.title} - Applicants</h1>\r\n                    </div>\r\n                    <div className={classes[\"modal-content\"]}>\r\n                        <ul>\r\n                            {applicantsList ? applicantsList : \"No Applicants Found\"}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n                <Verify modal={verifyModal} setModal={setVerifyModal} toggle={toggle} job={job} user={currentUser} request={request}/>\r\n            </>,\r\n            document.getElementById('portal')\r\n        )\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default JobSettings;","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\modals\\verification\\verify.js",["251","252","253"],"import React, { useState, useEffect } from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport classes from './verify.css';\r\n\r\nimport { deleteJob } from '../../../../../redux/actions/jobs';\r\nimport { updateJobState } from '../../../../../redux/actions/auth';\r\n\r\nconst Verify = (props) => {\r\n    const dispatch = useDispatch();\r\n    let request = props?.request;\r\n    let job = props?.job;\r\n    let user = props?.user;\r\n\r\n    const handleDelete = () => {\r\n        dispatch(deleteJob(job?._id));\r\n        props?.setModal(false);\r\n    }\r\n\r\n    const handleNewState = (newState) => {\r\n        dispatch(updateJobState(user?._id, job?._id, newState));\r\n        props?.setModal(false);\r\n    }\r\n\r\n    let display;\r\n    switch(request) {\r\n        case \"DELETE_JOB\":\r\n            display = (\r\n                <div className={classes[\"verify-form\"]}>\r\n                    <p>Are you sure you want to delete the job:</p><p>{job?.title}</p>\r\n                    <button onClick={handleDelete}>Yes</button>\r\n                    <button onClick={()=>props?.setModal(false)}>No</button>\r\n                </div>\r\n            )\r\n            break;\r\n        case \"ACCEPT_APPLICANT\":\r\n            display = (\r\n                <div className={classes[\"verify-form\"]}>\r\n                    <p>Are you sure you want to accept the applicant:</p><p>{user?.name?.forename} {user?.name?.surname}</p>\r\n                    <button onClick={()=>handleNewState(\"active\")}>Yes</button>\r\n                    <button onClick={()=>props?.setModal(false)}>No</button>\r\n                </div>\r\n            )\r\n            break;\r\n        case \"REJECT_APPLICANT\":\r\n            display = (\r\n                <div className={classes[\"verify-form\"]}>\r\n                    <p>Are you sure you want to reject the applicant:</p><p>{user?.name?.forename} {user?.name?.surname}</p>\r\n                    <button onClick={()=>handleNewState(\"rejected\")}>Yes</button>\r\n                    <button onClick={()=>props?.setModal(false)}>No</button>\r\n                </div>\r\n            )\r\n            break;\r\n        case \"JOB_COMPLETE\":\r\n            display = (\r\n                <div className={classes[\"verify-form\"]}>\r\n                    <p>Are you sure you want to complete the job:</p><p>{job?.title}</p>\r\n                    <button onClick={()=>handleNewState(\"completed\")}>Yes</button>\r\n                    <button onClick={()=>props?.setModal(false)}>No</button>\r\n                </div>\r\n            )\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n\r\n    if(props?.modal){\r\n        return ReactDom.createPortal(\r\n            <>\r\n                <div className={classes[\"modal-background\"]} onClick={props.toggle} />\r\n\r\n                <div className={classes[\"modal\"]}>\r\n                    {display}\r\n                </div>\r\n            </>,\r\n            document.getElementById('portal')\r\n        )\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default Verify;","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\modals\\jobs\\editJob\\editJob.js",["254","255","256"],"import React, { useState, useEffect } from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport classes from './editJobs.css';\r\n\r\nimport Verify from '../../../modals/verification/verify';\r\n\r\nconst EditJob = (props) => {\r\n    let job = props?.job;\r\n    const dispatch = useDispatch();\r\n    const user = useSelector((state) => state?.user);\r\n\r\n    const [verifyModal, setVerifyModal] = useState(false);\r\n    const toggleVerifyModal = () => setVerifyModal(!verifyModal);\r\n\r\n    if(props?.modal){\r\n        return ReactDom.createPortal(\r\n            <>\r\n                <div className={classes[\"modal-background\"]} onClick={props.toggle} />\r\n\r\n                <div className={classes[\"modal\"]}>\r\n                    <div className={classes[\"job-user\"]}>\r\n                        <div className={classes[\"job-user-details\"]}>\r\n                            <p>Name: {user?.name?.forename} {user?.name?.surname}</p>\r\n                            <p>Biography: {user?.cv?.biography}</p>\r\n                            <p>Skills: {user?.cv?.skills}</p>\r\n                            <p>Education: {user?.cv?.education}</p>\r\n                            <p>Experience: {user?.cv?.experience}</p>\r\n                            <p></p>\r\n                            <p>Contact Email: {user?.email}</p>\r\n                            <p>You can use the contact details provided above to communicate with your chosen worker.</p>\r\n                        </div>\r\n                        <div className={classes[\"job-user-img\"]}>\r\n                            <img src={user?.selectedFile} />\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes[\"job-settings\"]}>\r\n                        {job?.jobState===\"completed\" ? <p>This job has now been completed.</p> : <button onClick={()=>setVerifyModal(true)}>Set This Job As Completed</button>}\r\n                    </div>\r\n                </div>\r\n\r\n                <Verify modal={verifyModal} setModal={setVerifyModal} toggle={toggleVerifyModal} job={job} user={user} request=\"JOB_COMPLETE\"/>\r\n            </>,\r\n            document.getElementById('portal')\r\n        )\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default EditJob;","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\body\\modals\\business\\business.js",["257","258","259","260"],"import React, { useState, useEffect } from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport classes from './business.css';\r\n\r\nconst Business = (props) => {\r\n    let business = useSelector((state) => state?.businessUser);\r\n    if(props?.modal){\r\n        return ReactDom.createPortal(\r\n            <>\r\n                <div className={classes[\"modal-background\"]} onClick={props.toggle} />\r\n\r\n                <div className={classes[\"modal\"]}>\r\n                    <div className={classes[\"business-info\"]}>\r\n                        <p>Business Name: {business?.information?.businessName}</p>\r\n                        <p>Business Bio: {business?.information?.businessBio}</p>\r\n                        <p>Business Type: {business?.information?.businessType}</p>\r\n                        <p>Contact Email: {business?.email}</p>\r\n                    </div>\r\n                    <div className={classes[\"business-img\"]}>\r\n                        <img src={business?.information?.selectedFile} />\r\n                    </div>\r\n                </div>\r\n            </>,\r\n            document.getElementById('portal')\r\n        )\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default Business;","C:\\Users\\david\\Documents\\freelance-diary-application\\frontend\\src\\components\\layout\\footer\\footer.js",[],{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","replacedBy":"264"},{"ruleId":"265","severity":1,"message":"266","line":34,"column":8,"nodeType":"267","endLine":34,"endColumn":10,"suggestions":"268"},{"ruleId":"265","severity":1,"message":"269","line":19,"column":8,"nodeType":"267","endLine":19,"endColumn":16,"suggestions":"270"},{"ruleId":"271","severity":1,"message":"272","line":24,"column":9,"nodeType":"273","messageId":"274","endLine":24,"endColumn":17},{"ruleId":"271","severity":1,"message":"275","line":66,"column":15,"nodeType":"273","messageId":"274","endLine":66,"endColumn":20},{"ruleId":"265","severity":1,"message":"276","line":69,"column":8,"nodeType":"267","endLine":69,"endColumn":18,"suggestions":"277"},{"ruleId":"271","severity":1,"message":"278","line":1,"column":27,"nodeType":"273","messageId":"274","endLine":1,"endColumn":36},{"ruleId":"279","severity":1,"message":"280","line":16,"column":17,"nodeType":"281","endLine":16,"endColumn":77},{"ruleId":"279","severity":1,"message":"280","line":79,"column":21,"nodeType":"281","endLine":79,"endColumn":71},{"ruleId":"279","severity":1,"message":"280","line":110,"column":21,"nodeType":"281","endLine":110,"endColumn":71},{"ruleId":"279","severity":1,"message":"280","line":139,"column":29,"nodeType":"281","endLine":139,"endColumn":72},{"ruleId":"271","severity":1,"message":"282","line":1,"column":17,"nodeType":"273","messageId":"274","endLine":1,"endColumn":25},{"ruleId":"271","severity":1,"message":"283","line":2,"column":10,"nodeType":"273","messageId":"274","endLine":2,"endColumn":21},{"ruleId":"271","severity":1,"message":"284","line":8,"column":22,"nodeType":"273","messageId":"274","endLine":8,"endColumn":33},{"ruleId":"265","severity":1,"message":"285","line":17,"column":8,"nodeType":"267","endLine":17,"endColumn":10,"suggestions":"286"},{"ruleId":"265","severity":1,"message":"285","line":22,"column":8,"nodeType":"267","endLine":22,"endColumn":26,"suggestions":"287"},{"ruleId":"265","severity":1,"message":"285","line":20,"column":8,"nodeType":"267","endLine":20,"endColumn":10,"suggestions":"288"},{"ruleId":"271","severity":1,"message":"289","line":22,"column":18,"nodeType":"273","messageId":"274","endLine":22,"endColumn":25},{"ruleId":"279","severity":1,"message":"280","line":38,"column":25,"nodeType":"281","endLine":38,"endColumn":95},{"ruleId":"290","severity":1,"message":"291","line":3,"column":1,"nodeType":"292","endLine":22,"endColumn":3},{"ruleId":"271","severity":1,"message":"293","line":17,"column":19,"nodeType":"273","messageId":"274","endLine":17,"endColumn":27},{"ruleId":"271","severity":1,"message":"294","line":3,"column":10,"nodeType":"273","messageId":"274","endLine":3,"endColumn":21},{"ruleId":"265","severity":1,"message":"295","line":18,"column":22,"nodeType":"267","endLine":18,"endColumn":24},{"ruleId":"265","severity":1,"message":"296","line":39,"column":8,"nodeType":"267","endLine":39,"endColumn":10,"suggestions":"297"},{"ruleId":"265","severity":1,"message":"298","line":42,"column":22,"nodeType":"299","endLine":42,"endColumn":38},{"ruleId":"300","severity":1,"message":"301","line":47,"column":24,"nodeType":"299","messageId":"302","endLine":47,"endColumn":26},{"ruleId":"290","severity":1,"message":"291","line":3,"column":1,"nodeType":"292","endLine":22,"endColumn":3},{"ruleId":"271","severity":1,"message":"303","line":3,"column":8,"nodeType":"273","messageId":"274","endLine":3,"endColumn":15},{"ruleId":"271","severity":1,"message":"282","line":1,"column":17,"nodeType":"273","messageId":"274","endLine":1,"endColumn":25},{"ruleId":"271","severity":1,"message":"304","line":3,"column":22,"nodeType":"273","messageId":"274","endLine":3,"endColumn":35},{"ruleId":"265","severity":1,"message":"269","line":17,"column":8,"nodeType":"267","endLine":17,"endColumn":10,"suggestions":"305"},{"ruleId":"271","severity":1,"message":"283","line":11,"column":23,"nodeType":"273","messageId":"274","endLine":11,"endColumn":34},{"ruleId":"265","severity":1,"message":"285","line":20,"column":8,"nodeType":"267","endLine":20,"endColumn":10,"suggestions":"306"},{"ruleId":"265","severity":1,"message":"285","line":25,"column":8,"nodeType":"267","endLine":25,"endColumn":26,"suggestions":"307"},{"ruleId":"279","severity":1,"message":"280","line":15,"column":17,"nodeType":"281","endLine":15,"endColumn":71},{"ruleId":"271","severity":1,"message":"308","line":23,"column":11,"nodeType":"273","messageId":"274","endLine":23,"endColumn":22},{"ruleId":"279","severity":1,"message":"280","line":57,"column":21,"nodeType":"281","endLine":57,"endColumn":71},{"ruleId":"279","severity":1,"message":"280","line":71,"column":21,"nodeType":"281","endLine":71,"endColumn":71},{"ruleId":"279","severity":1,"message":"280","line":100,"column":29,"nodeType":"281","endLine":100,"endColumn":72},{"ruleId":"265","severity":1,"message":"285","line":22,"column":8,"nodeType":"267","endLine":22,"endColumn":10,"suggestions":"309"},{"ruleId":"271","severity":1,"message":"289","line":24,"column":18,"nodeType":"273","messageId":"274","endLine":24,"endColumn":25},{"ruleId":"279","severity":1,"message":"280","line":51,"column":29,"nodeType":"281","endLine":51,"endColumn":82},{"ruleId":"271","severity":1,"message":"310","line":4,"column":10,"nodeType":"273","messageId":"274","endLine":4,"endColumn":29},{"ruleId":"271","severity":1,"message":"311","line":5,"column":10,"nodeType":"273","messageId":"274","endLine":5,"endColumn":19},{"ruleId":"271","severity":1,"message":"312","line":39,"column":22,"nodeType":"273","messageId":"274","endLine":39,"endColumn":33},{"ruleId":"271","severity":1,"message":"313","line":43,"column":12,"nodeType":"273","messageId":"274","endLine":43,"endColumn":24},{"ruleId":"265","severity":1,"message":"314","line":50,"column":8,"nodeType":"267","endLine":50,"endColumn":10,"suggestions":"315"},{"ruleId":"271","severity":1,"message":"312","line":16,"column":22,"nodeType":"273","messageId":"274","endLine":16,"endColumn":33},{"ruleId":"265","severity":1,"message":"316","line":61,"column":8,"nodeType":"267","endLine":61,"endColumn":22,"suggestions":"317"},{"ruleId":"279","severity":1,"message":"280","line":145,"column":37,"nodeType":"281","endLine":145,"endColumn":103},{"ruleId":"271","severity":1,"message":"278","line":1,"column":27,"nodeType":"273","messageId":"274","endLine":1,"endColumn":36},{"ruleId":"271","severity":1,"message":"289","line":11,"column":18,"nodeType":"273","messageId":"274","endLine":11,"endColumn":25},{"ruleId":"271","severity":1,"message":"318","line":12,"column":12,"nodeType":"273","messageId":"274","endLine":12,"endColumn":24},{"ruleId":"271","severity":1,"message":"319","line":12,"column":26,"nodeType":"273","messageId":"274","endLine":12,"endColumn":41},{"ruleId":"279","severity":1,"message":"280","line":83,"column":37,"nodeType":"281","endLine":83,"endColumn":106},{"ruleId":"290","severity":1,"message":"291","line":3,"column":1,"nodeType":"292","endLine":18,"endColumn":3},{"ruleId":"265","severity":1,"message":"320","line":26,"column":8,"nodeType":"267","endLine":26,"endColumn":10,"suggestions":"321"},{"ruleId":"265","severity":1,"message":"269","line":31,"column":8,"nodeType":"267","endLine":31,"endColumn":14,"suggestions":"322"},{"ruleId":"271","severity":1,"message":"323","line":22,"column":9,"nodeType":"273","messageId":"274","endLine":22,"endColumn":13},{"ruleId":"324","severity":1,"message":"325","line":22,"column":65,"nodeType":"326","messageId":"327","endLine":22,"endColumn":67},{"ruleId":"271","severity":1,"message":"328","line":28,"column":11,"nodeType":"273","messageId":"274","endLine":28,"endColumn":28},{"ruleId":"265","severity":1,"message":"329","line":50,"column":8,"nodeType":"267","endLine":50,"endColumn":29,"suggestions":"330"},{"ruleId":"265","severity":1,"message":"331","line":50,"column":9,"nodeType":"299","endLine":50,"endColumn":28},{"ruleId":"265","severity":1,"message":"332","line":54,"column":30,"nodeType":"333","endLine":64,"endColumn":19},{"ruleId":"271","severity":1,"message":"334","line":72,"column":11,"nodeType":"273","messageId":"274","endLine":72,"endColumn":23},{"ruleId":"271","severity":1,"message":"282","line":1,"column":17,"nodeType":"273","messageId":"274","endLine":1,"endColumn":25},{"ruleId":"271","severity":1,"message":"278","line":1,"column":27,"nodeType":"273","messageId":"274","endLine":1,"endColumn":36},{"ruleId":"271","severity":1,"message":"283","line":3,"column":23,"nodeType":"273","messageId":"274","endLine":3,"endColumn":34},{"ruleId":"271","severity":1,"message":"278","line":1,"column":27,"nodeType":"273","messageId":"274","endLine":1,"endColumn":36},{"ruleId":"271","severity":1,"message":"335","line":10,"column":11,"nodeType":"273","messageId":"274","endLine":10,"endColumn":19},{"ruleId":"279","severity":1,"message":"280","line":34,"column":29,"nodeType":"281","endLine":34,"endColumn":61},{"ruleId":"271","severity":1,"message":"282","line":1,"column":17,"nodeType":"273","messageId":"274","endLine":1,"endColumn":25},{"ruleId":"271","severity":1,"message":"278","line":1,"column":27,"nodeType":"273","messageId":"274","endLine":1,"endColumn":36},{"ruleId":"271","severity":1,"message":"294","line":3,"column":10,"nodeType":"273","messageId":"274","endLine":3,"endColumn":21},{"ruleId":"279","severity":1,"message":"280","line":21,"column":25,"nodeType":"281","endLine":21,"endColumn":74},"no-native-reassign",["336"],"no-negated-in-lhs",["337"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["338"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["339"],"no-unused-vars","'jobsList' is assigned a value but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["340"],"'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'useSelector' is defined but never used.","'getAccounts' is defined but never used.","React Hook useEffect has missing dependencies: 'currentUser?.result?._id' and 'dispatch'. Either include them or remove the dependency array.",["341"],["342"],["343"],"'setUser' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'setClick' is assigned a value but never used.","'useDispatch' is defined but never used.","Assignments to the 'pagesArray' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has missing dependencies: 'numPages' and 'pagesArray'. Either include them or remove the dependency array.",["344"],"Assignments to the 'indexStart' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","BinaryExpression","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'Profile' is defined but never used.","'updateAccount' is defined but never used.",["345"],["346"],["347"],"'toggleClick' is assigned a value but never used.",["348"],"'getBusinessUserJobs' is defined but never used.","'deleteJob' is defined but never used.","'setBusiness' is assigned a value but never used.","'businessData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'business' and 'dispatch'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setBusinessData' needs the current value of 'business'.",["349"],"React Hook useEffect has a missing dependency: 'business?._id'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setJobData' needs the current value of 'business._id'.",["350"],"'businessUser' is assigned a value but never used.","'setBusinessUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'user?.jobs?.active', 'user?.jobs?.completed', 'user?.jobs?.pending', and 'user?.jobs?.rejected'. Either include them or remove the dependency array.",["351"],["352"],"'test' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'handleStateUpdate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'updateApplicants'. Either include it or remove the dependency array.",["353"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","Assignments to the 'applicantsList' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ChainExpression","'handleUpdate' is assigned a value but never used.","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},{"desc":"360","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"360","fix":"369"},{"desc":"362","fix":"370"},{"desc":"360","fix":"371"},{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"354","fix":"378"},{"desc":"379","fix":"380"},"Update the dependencies array to be: [dispatch, user]",{"range":"381","text":"382"},"Update the dependencies array to be: [dispatch, search]",{"range":"383","text":"384"},"Update the dependencies array to be: [location, props]",{"range":"385","text":"386"},"Update the dependencies array to be: [currentUser?.result?._id, dispatch]",{"range":"387","text":"388"},"Update the dependencies array to be: [currentComponent, currentUser?.result?._id, dispatch]",{"range":"389","text":"390"},{"range":"391","text":"388"},"Update the dependencies array to be: [numPages, pagesArray]",{"range":"392","text":"393"},"Update the dependencies array to be: [dispatch]",{"range":"394","text":"395"},{"range":"396","text":"388"},{"range":"397","text":"390"},{"range":"398","text":"388"},"Update the dependencies array to be: [business, dispatch]",{"range":"399","text":"400"},"Update the dependencies array to be: [business?._id, props.modal]",{"range":"401","text":"402"},"Update the dependencies array to be: [dispatch, user?.jobs?.active, user?.jobs?.completed, user?.jobs?.pending, user?.jobs?.rejected]",{"range":"403","text":"404"},{"range":"405","text":"382"},"Update the dependencies array to be: [updateApplicants]",{"range":"406","text":"407"},[1162,1164],"[dispatch, user]",[717,725],"[dispatch, search]",[2061,2071],"[location, props]",[668,670],"[currentUser?.result?._id, dispatch]",[837,855],"[currentComponent, currentUser?.result?._id, dispatch]",[672,674],[1366,1368],"[numPages, pagesArray]",[500,502],"[dispatch]",[733,735],[918,936],[786,788],[2077,2079],"[business, dispatch]",[1617,1631],"[business?._id, props.modal]",[994,996],"[dispatch, user?.jobs?.active, user?.jobs?.completed, user?.jobs?.pending, user?.jobs?.rejected]",[1218,1224],[1980,2001],"[updateApplicants]"]